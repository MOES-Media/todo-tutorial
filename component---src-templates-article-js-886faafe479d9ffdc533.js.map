{"version":3,"file":"component---src-templates-article-js-886faafe479d9ffdc533.js","mappings":"iLAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,0BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,uBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,sBAAIL,MAAO,CAAEG,OAAQ,IACnB,gBAAC,EAAAG,KAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAM,QACNC,eAAe,SAGhBV,OAWXD,EAAOY,aAAe,CACpBX,UAAU,IAGZ,QCaA,EAxCe,SAAC,GAAkB,IAAD,EAAfY,EAAe,EAAfA,SACVC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQd,WAAW,UAAAa,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,uBACEhB,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,4BAAOM,GACP,0BACEX,MAAO,CACLiB,UAAU,SAFd,MAKK,IAAIC,MAAOC,cALhB,mBAOE,qBAAGC,KAAK,4BAAR,e,8DCtCJC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAoEH,OApEGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,OACE,gBAAC,IAAD,KACE,0BAAKC,KAAKC,MAAMZ,KAAKa,SAASC,SAASV,MAAvC,KACCO,KAAKC,MAAMZ,KAAKa,SAASE,QACxB,6BACE,6BACE,0BACE,sBAAIC,QAAQ,KAAZ,qBAGJ,6BACE,0BACE,6CACA,0BAAKL,KAAKC,MAAMZ,KAAKa,SAASE,OAAOE,WAEvC,0BACE,8CACA,0BAAKN,KAAKC,MAAMZ,KAAKa,SAASE,OAAOG,YAEvC,0BACE,6CACA,0BAAKP,KAAKC,MAAMZ,KAAKa,SAASE,OAAOI,WAEvC,0BACE,+CACA,0BAAKR,KAAKC,MAAMZ,KAAKa,SAASE,OAAOK,aAEvC,0BACE,mDACA,0BAAKT,KAAKC,MAAMZ,KAAKa,SAASE,OAAOM,iBAEvC,0BACE,0CACA,0BAAKV,KAAKC,MAAMZ,KAAKa,SAASE,OAAOO,UAK5CX,KAAKC,MAAMZ,KAAKa,SAASU,UACxB,6BACE,6BACE,0BACE,sBAAIP,QAAQ,KAAZ,uBAGJ,6BACE,0BACE,2CACA,0BAAKL,KAAKC,MAAMZ,KAAKa,SAASU,SAASC,OAEzC,0BACE,6CACA,0BAAKb,KAAKC,MAAMZ,KAAKa,SAASU,SAASE,SAEzC,0BACE,6CACA,0BAAKd,KAAKC,MAAMZ,KAAKa,SAASU,SAASG,WAK/C,uBACEC,wBAAyB,CAAEC,OAAQjB,KAAKC,MAAMZ,KAAKa,SAASgB,UAInE,EApEGpB,CAAgBqB,EAAAA,WAuEtB","sources":["webpack://@moes-media/site/./src/components/header.js","webpack://@moes-media/site/./src/components/layout.js","webpack://@moes-media/site/./src/templates/article.js"],"sourcesContent":["import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `2rem`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"./../components/layout\"\r\n\r\nclass Article extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h1>{this.props.data.asciidoc.document.title} </h1>\r\n        {this.props.data.asciidoc.author && (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td colSpan=\"2\">Author metadata</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th>author.fullName</th>\r\n                <td>{this.props.data.asciidoc.author.fullName}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>author.firstName</th>\r\n                <td>{this.props.data.asciidoc.author.firstName}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>author.lastName</th>\r\n                <td>{this.props.data.asciidoc.author.lastName}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>author.middleName</th>\r\n                <td>{this.props.data.asciidoc.author.middleName}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>author.authorInitials</th>\r\n                <td>{this.props.data.asciidoc.author.authorInitials}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>author.email</th>\r\n                <td>{this.props.data.asciidoc.author.email}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        )}\r\n        {this.props.data.asciidoc.revision && (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td colSpan=\"2\">Revision metadata</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th>revision.date</th>\r\n                <td>{this.props.data.asciidoc.revision.date}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>revision.number</th>\r\n                <td>{this.props.data.asciidoc.revision.number}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>revision.remark</th>\r\n                <td>{this.props.data.asciidoc.revision.remark}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        )}\r\n        <div\r\n          dangerouslySetInnerHTML={{ __html: this.props.data.asciidoc.html }}\r\n        />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Article\r\n\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    asciidoc(id: { eq: $id }) {\r\n      html\r\n      document {\r\n        title\r\n        subtitle\r\n        main\r\n      }\r\n      revision {\r\n        date\r\n        number\r\n        remark\r\n      }\r\n      author {\r\n        fullName\r\n        firstName\r\n        lastName\r\n        middleName\r\n        authorInitials\r\n        email\r\n      }\r\n    }\r\n  }\r\n`"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","Link","to","color","textDecoration","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","marginTop","Date","getFullYear","href","Article","render","this","props","asciidoc","document","author","colSpan","fullName","firstName","lastName","middleName","authorInitials","email","revision","date","number","remark","dangerouslySetInnerHTML","__html","html","React"],"sourceRoot":""}